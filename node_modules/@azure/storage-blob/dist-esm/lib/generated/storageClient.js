/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { StorageClientContext } from "./storageClientContext";
var StorageClient = /** @class */ (function (_super) {
    tslib_1.__extends(StorageClient, _super);
    /**
     * @class
     * Initializes a new instance of the StorageClient class.
     * @constructor
     *
     * @param {object} [options] - The parameter options
     *
     * @param {Array} [options.filters] - Filters to be added to the request pipeline
     *
     * @param {object} [options.requestOptions] - The request options. Detailed info can be found at
     * {@link https://github.github.io/fetch/#Request Options doc}
     *
     * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
     *
     */
    function StorageClient(url, version, options) {
        var _this = _super.call(this, url, version, options) || this;
        _this.service = new operations.Service(_this);
        _this.container = new operations.Container(_this);
        _this.blob = new operations.Blob(_this);
        _this.pageBlob = new operations.PageBlob(_this);
        _this.appendBlob = new operations.AppendBlob(_this);
        _this.blockBlob = new operations.BlockBlob(_this);
        return _this;
    }
    return StorageClient;
}(StorageClientContext));
// Operation Specifications
export { StorageClient, StorageClientContext, Models as StorageModels, Mappers as StorageMappers };
export * from "./operations";
//# sourceMappingURL=storageClient.js.map