/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "ms-rest-js";
var packageName = "";
var packageVersion = "";
var StorageClientContext = /** @class */ (function (_super) {
    tslib_1.__extends(StorageClientContext, _super);
    /**
     * @class
     * Initializes a new instance of the StorageClientContext class.
     * @constructor
     *
     * @param {string} url - The URL of the service account, container, or blob that is the targe of the desired operation.
     *
     * @param {string} version - Specifies the version of the operation to use for this request.
     *
     * @param {object} [options] - The parameter options
     *
     * @param {Array} [options.filters] - Filters to be added to the request pipeline
     *
     * @param {object} [options.requestOptions] - The request options. Detailed info can be found at
     * {@link https://github.github.io/fetch/#Request Options doc}
     *
     * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
     *
     */
    function StorageClientContext(url, version, options) {
        var _this = this;
        if (url === null || url === undefined) {
            throw new Error('\'url\' cannot be null.');
        }
        if (version === null || version === undefined) {
            throw new Error('\'version\' cannot be null.');
        }
        if (!options) {
            options = {};
        }
        _this = _super.call(this, undefined, options) || this;
        _this.baseUri = "{url}";
        _this.requestContentType = "application/json; charset=utf-8";
        _this.url = url;
        _this.version = version;
        _this.addUserAgentInfo(packageName + "/" + packageVersion);
        return _this;
    }
    return StorageClientContext;
}(msRest.ServiceClient));
export { StorageClientContext };
//# sourceMappingURL=storageClientContext.js.map