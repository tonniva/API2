import * as msRest from "ms-rest-js";
import * as Models from "../models";
import { StorageClientContext } from "../storageClientContext";
/** Class representing a Service. */
export declare class Service {
    private readonly client;
    /**
     * Create a Service.
     * @param {StorageClientContext} client Reference to the service client.
     */
    constructor(client: StorageClientContext);
    /**
     * Sets properties for a storage account's Blob service endpoint, including properties for Storage
     * Analytics and CORS (Cross-Origin Resource Sharing) rules
     *
     * @param {StorageServiceProperties} storageServiceProperties The StorageService properties.
     *
     * @param {ServiceSetPropertiesOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    setProperties(storageServiceProperties: Models.StorageServiceProperties): Promise<Models.ServiceSetPropertiesResponse>;
    setProperties(storageServiceProperties: Models.StorageServiceProperties, options: Models.ServiceSetPropertiesOptionalParams): Promise<Models.ServiceSetPropertiesResponse>;
    setProperties(storageServiceProperties: Models.StorageServiceProperties, callback: msRest.ServiceCallback<void>): void;
    setProperties(storageServiceProperties: Models.StorageServiceProperties, options: Models.ServiceSetPropertiesOptionalParams, callback: msRest.ServiceCallback<void>): void;
    /**
     * gets the properties of a storage account's Blob service, including properties for Storage
     * Analytics and CORS (Cross-Origin Resource Sharing) rules.
     *
     * @param {ServiceGetPropertiesOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getProperties(): Promise<Models.ServiceGetPropertiesResponse>;
    getProperties(options: Models.ServiceGetPropertiesOptionalParams): Promise<Models.ServiceGetPropertiesResponse>;
    getProperties(callback: msRest.ServiceCallback<Models.StorageServiceProperties>): void;
    getProperties(options: Models.ServiceGetPropertiesOptionalParams, callback: msRest.ServiceCallback<Models.StorageServiceProperties>): void;
    /**
     * Retrieves statistics related to replication for the Blob service. It is only available on the
     * secondary location endpoint when read-access geo-redundant replication is enabled for the
     * storage account.
     *
     * @param {ServiceGetStatisticsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getStatistics(): Promise<Models.ServiceGetStatisticsResponse>;
    getStatistics(options: Models.ServiceGetStatisticsOptionalParams): Promise<Models.ServiceGetStatisticsResponse>;
    getStatistics(callback: msRest.ServiceCallback<Models.StorageServiceStats>): void;
    getStatistics(options: Models.ServiceGetStatisticsOptionalParams, callback: msRest.ServiceCallback<Models.StorageServiceStats>): void;
    /**
     * The List Containers Segment operation returns a list of the containers under the specified
     * account
     *
     * @param {ServiceListContainersSegmentOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listContainersSegment(): Promise<Models.ServiceListContainersSegmentResponse>;
    listContainersSegment(options: Models.ServiceListContainersSegmentOptionalParams): Promise<Models.ServiceListContainersSegmentResponse>;
    listContainersSegment(callback: msRest.ServiceCallback<Models.ListContainersSegmentResponse>): void;
    listContainersSegment(options: Models.ServiceListContainersSegmentOptionalParams, callback: msRest.ServiceCallback<Models.ListContainersSegmentResponse>): void;
    /**
     * Returns the sku name and account kind
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getAccountInfo(): Promise<Models.ServiceGetAccountInfoResponse>;
    getAccountInfo(options: msRest.RequestOptionsBase): Promise<Models.ServiceGetAccountInfoResponse>;
    getAccountInfo(callback: msRest.ServiceCallback<void>): void;
    getAccountInfo(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
}
//# sourceMappingURL=service.d.ts.map