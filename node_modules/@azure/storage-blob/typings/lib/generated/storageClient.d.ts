import * as msRest from "ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { StorageClientContext } from "./storageClientContext";
declare class StorageClient extends StorageClientContext {
    service: operations.Service;
    container: operations.Container;
    blob: operations.Blob;
    pageBlob: operations.PageBlob;
    appendBlob: operations.AppendBlob;
    blockBlob: operations.BlockBlob;
    /**
     * @class
     * Initializes a new instance of the StorageClient class.
     * @constructor
     *
     * @param {object} [options] - The parameter options
     *
     * @param {Array} [options.filters] - Filters to be added to the request pipeline
     *
     * @param {object} [options.requestOptions] - The request options. Detailed info can be found at
     * {@link https://github.github.io/fetch/#Request Options doc}
     *
     * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
     *
     */
    constructor(url: string, version: string, options?: msRest.ServiceClientOptions);
}
export { StorageClient, StorageClientContext, Models as StorageModels, Mappers as StorageMappers };
export * from "./operations";
//# sourceMappingURL=storageClient.d.ts.map